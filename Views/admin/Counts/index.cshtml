@model IEnumerable<yogloansdotnet.Models.CountsModel>
@{
    ViewData["Title"] = "About Content";
    Layout = "~/Views/admin/Shared/_Layout.cshtml";
}
@Html.AntiForgeryToken()

<style>
    td{
        text-align:center;
    }
    th{
        text-align:center;
    }
    .point-input-group {
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
    }
    .remove-point {
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 0 10px;
        cursor: pointer;
    }
    .empty-table-btn {
        background-color: #dc3545;
        color: white;
        padding: 10px;
        width: 15%;
        border: none;
        margin-top: 20px;
        cursor: pointer;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title"> Add Achievments</h4>
                    
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if(Model.Any()){
                           <div style="display:grid; grid-template-columns: repeat(4,1fr); gap:10px;" class="col-12">

                        @foreach(var achievement in Model){
                         
                        
                            <div class="card col-12" style=" height:auto; padding:20px; display:flex; flex-direction:column; margin-bottom:10px; justify-contnet:center; align-items:center; gap:10px;  " >
                            
                            <div>
                                @achievement.Counts
                            </div>
                            <div>
                                @achievement.Head
                            </div>

                      <button onclick="deleteAchievement('@achievement.Id')" style="background-color:red; color:white; padding:3px; border:none;">Delete</button>


                            </div>
                          
                        }  </div>
                        <button type="button" style="padding:5px; background-color:#044697; border:none; color:white;" data-bs-toggle="modal" data-bs-target="#myModal">Add again</button>
                    }
@if(!Model.Any()){
                    <form action="/admin/counts/create" method="post" class="col-12" style="display:flex; flex-direction:column; gap:20px; justify-content:center; align-items:center;">
                        <input type="text" placeholder="Achievement" class="form-control" name="Head">
                        <input type="number" placeholder="Achievement Count" class="form-control" style="" name="Counts">
                        <button type="submit" style="background-color:#044697; color:white; padding:10px; width:15%; border:none;">Submit</button>
                    </form>
}
                    <!-- <form action="/admin/aboutcontent/empty-table" method="post" class="col-12" style="display:flex; justify-content:center;">
                        <button type="submit" class="empty-table-btn" onclick="return confirm('Are you sure you want to empty the table? This action cannot be undone.')">Empty Table</button>
                    </form> -->
                    
                </div>
            </div>
        </div>
    </div>
</div>
<div id="myModal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add New Achievement</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form action="/admin/counts/create" method="post" class="col-12" style="display:flex; flex-direction:column; gap:20px; justify-content:center; align-items:center;">
            <input type="text" placeholder="Achievement" class="form-control" name="Head">
            <input type="number" placeholder="Achievement Count" class="form-control" name="Counts">
            <button type="submit" style="background-color:#044697; color:white; padding:10px; width:15%; border:none;">Submit</button>
        </form>
      </div>
    </div>
  </div>
</div>
@section Scripts {
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        // Initialize Bootstrap modal
        document.addEventListener('DOMContentLoaded', function() {
            var myModal = new bootstrap.Modal(document.getElementById('myModal'));
        });

        function deleteAchievement (id){
 if (confirm('Are you sure you want to delete this point?')) {
               $.ajax({
    url: '/admin/Counts/delete-counts/' + id,
    type: 'POST',
    data: {
        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
    },
    success: function(result) {
        if (result.success) {
            alert('Deleted successfully');
            location.reload(); // This will run after the alert is dismissed
        } else {
            alert('Error deleting point: ' + result.message);
        }
    },
    error: function(xhr, status, error) {
        alert('Error deleting point: ' + error);
    }
});
            }
}
        
        $(document).ready(function() {
            $('#loansTable').DataTable({
                responsive: true,
                "order": [[0, "asc"]],
                "columnDefs": [
                    {
                        "targets": 0,
                        "render": function(data, type, row, meta) {
                            return meta.row + 1;
                        }
                    }
                ]
            });
        });
    </script>
}