@model List<yogloansdotnet.Models.CareerModel>

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/admin/Shared/_Layout.cshtml";
}
<style>
    td{
        text-align:center;
    }
    th{
        text-align:center;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Career Management</h4>
                    <div class="col-12" style="display:flex; justify-content: end; gap:20px;">
                        <!-- <button type="button" class="btn btn-primary" onclick="window.location.href='/admin/Careeradmin/departments'">Add Departments +</button> -->
<!--                         <button type="button" class="btn btn-primary" onclick="window.location.href='/admin/Careeradmin/designation'">Add Designation +</button> -->
                        <button type="button" class="btn btn-primary"  data-bs-toggle="modal" data-bs-target="#addcareer">Add Career +</button>
                        
<!--                         <button type="button" class="btn btn-primary" onclick="window.location.href='/admin/homeloan/offer'">Add Offer +</button> -->
                    </div>

                    <div class="table-responsive mt-3">
                        <table id="loansTable" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Job</th>
                                    <th> PDF</th>
                                    <th>Role</th>
                                    <th>Department</th>
                                    <th>Timing To</th>
                                    <th>Timing From</th>
                                    <th>Shift</th>
                                    <th>Description</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>

                     @foreach (var career in Model)
{
    <tr>
        <td></td>
        <td>@career.Job</td>

        @if (!string.IsNullOrEmpty(career.File))
        {
            <td><a href="@career.File"><img src="/images/icon/show.png" style="width:30px; height:30px;"/></a></td>
        }
        else
        {
            <td>No File</td>
        }

        <td>@career.Role</td>
        <td>@career.de_name</td>
        <td>@career.Salary_range_to</td>
        <td>@career.Salary_range_from</td>
        <td>@career.Shift</td>
        <td>@career.Discription</td>
        <td>
            <button class="btn btn-sm btn-info"  data-bs-toggle="modal" data-bs-target="#addcareer"
                    onclick="editCsr(
                        @career.Id, 
                        '@career.Role', 
                        '@career.Job', 
                        '@career.File', 
                        '@career.de_name', 
                        '@career.Salary_range_to',
                        '@career.Salary_range_from',
                        '@career.Shift',
                        '@career.Discription',
                        '@career.Department'
                    )">Edit</button>

            <button class="btn btn-sm btn-danger" onclick="deleteCsr(@career.Id)">Delete</button>
        </td>
    </tr>
}   <tbody>
</table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Modal *@
<div id="addcareer" class="modal fade" tabindex="-1" role="dialog" >
    <div class="modal-dialog" >
        <form class="modal-content" method="post" action="/admin/Department/add-career" enctype="multipart/form-data" id="csr">
            <input type="hidden" id="id" name="careerModel.Id" value="0">
            <div class="modal-header">
                <h5 class="modal-title">Add Career</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @Html.AntiForgeryToken()

                <!-- Job & Role -->
                <div class="row">
                    <div class="col-md-6">
                        <label for="job" class="form-label">Job</label>
                        <input type="text" id="job" name="careerModel.Job" class="form-control" placeholder="Job" required>
                    </div>
                    <div class="col-md-6">
                        <label for="role" class="form-label">Role</label>
                        <input type="text" id="role" name="careerModel.Role" class="form-control" placeholder="Role" required>
                    </div>
                </div>

                <!-- Department & Shift -->
                <div class="row">
                    <div class="col-md-6">
                        <label for="departments" class="form-label">Department</label>
                      <select id="departments" name="careerModel.Department" class="form-control">
                            <!-- Options populated by JS -->
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="shift" class="form-label">Shift</label>
                       <!--  <input type="text" id="shift" name="careerModel.Shift" class="form-control" placeholder="Shift" required> -->
                       <select name="careerModel.Shift" class="form-control">
                                <option value="Regular">Regular</option>
                       </select>
                    </div>
                </div>

                <!-- Salary Range -->
                <div class="row">
                    <div class="col-md-6">
                        <label for="salaryFrom" class="form-label">Salary Range From</label>
                        <input type="number" id="salaryFrom" name="careerModel.Salary_range_from" class="form-control" placeholder="Salary Range From" required>
                    </div>
                    <div class="col-md-6">
                        <label for="salaryTo" class="form-label">Salary Range To</label>
                        <input type="number" id="salaryTo" name="careerModel.Salary_range_to" class="form-control" placeholder="Salary Range To">
                    </div>
                </div>

                <!-- File Upload -->
                <div class="row ">
                    <div class="col-md-12">
                        <label for="file" class="form-label">Upload PDF</label>
                        <input type="file" id="file" name="File" class="form-control" accept="application/pdf">
                    </div>
                </div>

                <!-- Description -->
                <div class="row">
                    <div class="col-md-12">
                        <label for="description" class="form-label">Description</label>
                        <textarea id="description" name="careerModel.Discription" class="form-control" placeholder="Description" rows="4" ></textarea>
                    </div>
                </div>
            </div>
            <input type="hidden" id="de-name" name="careerModel.de_name">
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#loansTable').DataTable({
                responsive: true,
                "order": [[0, "asc"]],
                "columnDefs": [
                    {
                        "targets": 0,
                        "render": function(data, type, row, meta) {
                            return meta.row + 1;
                        }
                    }
                ]
            });
        });


        function deleteCsr(id) {
            if (confirm('Are you sure you want to delete this Career?')) {
                $.ajax({
                    url: '/admin/Department/delete-career/' + id,
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            alert('Career deleted successfully');
                            location.reload();
                        } else {
                            alert('Error deleting Career: ' + result.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error deleting Career: ' + error);
                    }
                });
            }
        }

       $(document).ready(function() {
            $('#csr').on('submit', function(e) {
                e.preventDefault();
                
                var formData = new FormData(this);
                var isUpdate = $('#id').val() !== '';
                
                $.ajax({
                    url: '/admin/Department/add-career',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            alert(isUpdate ? 'Career updated successfully' : 'Career added successfully');
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error: ' + error);
                    }
                });
            });

            // Reset form when modal is closed
            $('#myModal').on('hidden.bs.modal', function () {
                $('#csr')[0].reset();
                $('#id').val('');
                $('input[name="pdf"]').attr('required', 'required');
                $('.modal-title').text('Add CSR');
                $('button[type="submit"]').text('Create');
            });

      
        });
 
          $.ajax({
    url: "http://localhost:8085/api/Get-department",
    method: "GET",
    success: function(response) {
        
        const departments = response.customer_data;

        for (let i = 0; i < departments.length; i++) {
            const department = departments[i];
            $('#departments').append(`
                <option value="${department.DepartmentID}" data-name="${department.DepartmentName}">${department.DepartmentName}</option>
            `);
        }
    },
    error: function(xhr, status, error) {
        console.error("AJAX Error:", status, error);
    }
});
$('#departments').on('change', function () {
    var departmentName = $(this).find(':selected').data('name'); // Get data-name
    $('#de-name').val(departmentName); // Set it to the input
});

// Reset form when modal is closed
$('#addcareer').on('hidden.bs.modal', function () {
    $('#csr')[0].reset();
    $('#id').val('0');
    $('.modal-title').text('Add Career');
    $('button[type="submit"]').text('Create');
});
 function editCsr(id, role, job, file, de_name, salaryTo, salaryFrom, shift, description, department) {
        $('#id').val(id);
        $('#role').val(role);
        $('#job').val(job);
        $('#de-name').val(de_name);
        $('#salaryTo').val(salaryTo);
        $('#salaryFrom').val(salaryFrom);
        $('#description').val(description);

        // Set department dropdown
        $('#departments').val(department);

        // Set shift dropdown
        $("select[name='careerModel.Shift']").val(shift);

        // If you want to show the file name somewhere
        if (file && file !== "No File") {
            $('#file').after('<p class="mt-2 text-info">Existing File: ' + file + '</p>');
        }

        // Change submit button text if needed
        $('.modal-title').text('Edit Career');
        
    } 
    </script>
}